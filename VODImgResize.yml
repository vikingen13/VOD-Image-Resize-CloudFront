AWSTemplateFormatVersion: 2010-09-09

Transform: AWS::Serverless-2016-10-31

###############################################################################
Parameters:
###############################################################################

  PriceClass:
    Type: String
    Description: The CloudFront distribution price class
    Default: 'PriceClass_All'
    AllowedValues:
      - 'PriceClass_100'
      - 'PriceClass_200'
      - 'PriceClass_All'


###############################################################################
Resources:
###############################################################################

  ServerLessResizeBucketSite:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain

  ServerLessResizeBucketOriginal:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain

  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Comment: Distribution for VodImgResize
        DefaultCacheBehavior:
          Compress: true
          ForwardedValues:
            QueryString: false
          TargetOriginId: the-s3-bucket
          ViewerProtocolPolicy: redirect-to-https
        DefaultRootObject: index.html
        CustomErrorResponses:
          - ErrorCachingMinTTL: 300
            ErrorCode: 403
            ResponseCode: 200
            ResponsePagePath: /index.html
          - ErrorCachingMinTTL: 300
            ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: /index.html
        Enabled: true
        HttpVersion: http2
        Origins:
          - DomainName: !GetAtt ServerLessResizeBucketSite.RegionalDomainName
            Id: the-s3-bucket
            S3OriginConfig:
              OriginAccessIdentity:
                !Join ['', ['origin-access-identity/cloudfront/', !Ref CloudFrontOriginAccessIdentity]]
        PriceClass: !Ref PriceClass

  CloudFrontOriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Sub 'CloudFront OAI for VodImageResize website'          

  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ServerLessResizeBucketSite
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject
            Effect: Allow
            Resource: !Join ['', ['arn:aws:s3:::', !Ref ServerLessResizeBucketSite, '/*']]
            Principal:
              CanonicalUser: !GetAtt CloudFrontOriginAccessIdentity.S3CanonicalUserId
          - Action:
              - s3:*
            Effect: Allow
            Resource: !Join ['', ['arn:aws:s3:::', !Ref ServerLessResizeBucketSite, '/*']]
            Principal:
              AWS: !GetAtt ResizeFunctionExecutionRole.Arn

  OriginBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ServerLessResizeBucketOriginal
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject
            Effect: Allow
            Resource: !Join ['', ['arn:aws:s3:::', !Ref ServerLessResizeBucketOriginal, '/*']]
            Principal:
              AWS: !GetAtt ResizeFunctionExecutionRole.Arn


  ResizeFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: ResizeFunction
      CodeUri: ./ImageResize/function.zip
      Handler: ImageResize.lambda_handler
      Runtime: python3.7
      Timeout: 600
      Role: !GetAtt ResizeFunctionExecutionRole.Arn
      Environment:
        Variables:
          BUCKET: !Ref ServerLessResizeBucketSite
          ALLOWEDRESOLUTION: "[1080x1440,800x600,600x1080,720x480]"
      Events:
        S3Bucket:
          Type: S3
          Properties:
            Bucket: !Ref ServerLessResizeBucketOriginal
            Events: 's3:ObjectCreated:*'


  ProcessingLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !Ref ResizeFunction
      Principal: s3.amazonaws.com
      SourceArn: !GetAtt ServerLessResizeBucketOriginal.Arn
      SourceAccount: !Ref 'AWS::AccountId'


  ResizeFunctionExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Resource: "*"
              Effect: Allow
              Action:
                - rekognition:DetectText
                - rekognition:DetectFaces
          

          

Outputs:
  Bucket:
    Value: !Ref ServerLessResizeBucketSite

  BucketPict:
    Value: !Ref ServerLessResizeBucketOriginal
  BucketRegionalDomainName:
    Value: !GetAtt ServerLessResizeBucketSite.RegionalDomainName

  CloudFrontId:
    Description: The cloud front id
    Value: !Ref CloudFrontDistribution


